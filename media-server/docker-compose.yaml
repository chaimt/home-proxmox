services:
  duplicati:
    image: duplicati/duplicati:2.0.9.108
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_duplicati
    hostname: duplicati
    restart: unless-stopped
    # Recommendation: Duplicati needs root user to get access to all files
    user: "${DOCKER_ROOTPUID:-0}:${DOCKER_ROOTPGID:-0}"
    network_mode: bridge
    ports:
      - 8200:8200
    volumes:
      - ${DOCKER_PATH_PERSISTENT}/duplicati_data:/data:rw
      - /docker/backups:/backups:rw
      - ${DOCKER_PATH_PERSISTENT}:/source:ro
      - ${CONFIG_PATH}:/config:ro      
    environment:
      - TZ=${DOCKER_TZ}

  watchtower:
    image: containrrr/watchtower:1.7.1
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      - WATCHTOWER_POLL_INTERVAL=86400
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_MONITOR_ONLY=true
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=telegram://${BOT_TOKEN}@telegram/?channels=${CHAT_ID}

  dozzle:
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_dozzle
    image: amir20/dozzle:v8.7.1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  plex:
    image: linuxserver/plex:1.32.6
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - UMASK_SET=022 #optional
      - PLEX_CLAIM= #optional
    volumes:
      - ${DOCKER_PATH_PERSISTENT}/plex/config:/config
      - ${DOCKER_PATH_PERSISTENT}/transmission/downloads/complete:/tv
      - ${DOCKER_PATH_PERSISTENT}/plex/movies:/movies
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission:4.0.4
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Jerusalem
      - USER=ha #optional
      - PASS=tv #optional
    volumes:
      - ${DOCKER_PATH_PERSISTENT}/transmission/config:/config
      - ${DOCKER_PATH_PERSISTENT}/transmission/downloads:/downloads
      - ${DOCKER_PATH_PERSISTENT}/transmission/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:3.0.10
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ${DOCKER_PATH_PERSISTENT}/sonarr/config:/config
      - ${DOCKER_PATH_PERSISTENT}/sonarr/downloads:/downloads
      - ${DOCKER_PATH_PERSISTENT}/sonarr/tv:/tv
    ports:
      - 8989:8989
    restart: unless-stopped

  glances:
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_glances
    image: nicolargo/glances:4.2.0
    restart: unless-stopped
    pid: host
    ports:
      - 61208:61208
    command: ["glances", "-w"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/docker/glances:/glances/conf
      
  gateway:
      network_mode: host
      environment:
          - MQTT_HOST=10.0.0.2
          - MQTT_USERNAME=ha
          - MQTT_PASSWORD=${MQTT_PASS}
          - PUBLISH_ALL=true
          - HASS_DISCOVERY=true
          - SCAN_TIME=60
          - TIME_BETWEEN=60
          - PUBLISH_PRESENCE=true
      volumes:
          - '/var/run/dbus:/var/run/dbus'
      container_name: TheengsGateway
      image: theengs/gateway