networks:
  zabbix-network:
    external: true

volumes:
  zabbix-postgres:
  zabbix-postgres-backup:
  zabbix-database-backups:


services:
  duplicati:
    image: duplicati/duplicati:2.1.0.119
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_duplicati
    hostname: duplicati
    restart: unless-stopped
    # Recommendation: Duplicati needs root user to get access to all files
    user: "${DOCKER_ROOTPUID:-0}:${DOCKER_ROOTPGID:-0}"
    network_mode: bridge
    ports:
      - 8200:8200
    volumes:
      - ${DOCKER_PATH_PERSISTENT}/duplicati_data:/data:rw
      - /docker/backups:/backups:rw
      - ${DOCKER_PATH_PERSISTENT}:/source:ro
      - ${CONFIG_PATH}:/config:ro      
    environment:
      - TZ=${DOCKER_TZ}

  watchtower:
    image: containrrr/watchtower:1.7.1
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      - WATCHTOWER_POLL_INTERVAL=86400
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_MONITOR_ONLY=true
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=telegram://${BOT_TOKEN}@telegram/?channels=${CHAT_ID}

  dozzle:
    container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_dozzle
    image: amir20/dozzle:v8.12.18
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  # glances:
  #   container_name: ${DOCKER_CONTAINER_NAME_PREFIX}_glances
  #   image: nicolargo/glances:4.3.1
  #   restart: unless-stopped
  #   pid: host
  #   ports:
  #     - 61208:61208
  #   command: ["glances", "-w"]
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /var/docker/glances:/glances/conf


  postgres:
    image: ${ZABBIX_POSTGRES_IMAGE_TAG}
    volumes:
      - zabbix-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${ZABBIX_DB_NAME}
      POSTGRES_USER: ${ZABBIX_DB_USER}
      POSTGRES_PASSWORD: ${ZABBIX_DB_PASSWORD}
    networks:
      - zabbix-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${ZABBIX_DB_NAME}", "-U", "${ZABBIX_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  zabbix-server:
    image: ${ZABBIX_SERVER_IMAGE_TAG}
    environment:
      DB_SERVER_HOST: postgres
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${ZABBIX_DB_NAME}
      POSTGRES_USER: ${ZABBIX_DB_USER}
      POSTGRES_PASSWORD: ${ZABBIX_DB_PASSWORD}
      ZBX_CACHESIZE: ${ZABBIX_CACHESIZE}
    networks:
      - zabbix-network
    ports:
      - "10051:10051"
    healthcheck:
      test: grep -qr "zabbix_server" /proc/*/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  zabbix-dashboard:
    image: ${ZABBIX_WEB_IMAGE_TAG}
    environment:
      DB_SERVER_HOST: postgres
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${ZABBIX_DB_NAME}
      POSTGRES_USER: ${ZABBIX_DB_USER}
      POSTGRES_PASSWORD: ${ZABBIX_DB_PASSWORD}
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: ${ZABBIX_TIMEZONE}
    networks:
      - zabbix-network
    ports:
      - "80:8080"
      - "443:8443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      zabbix-server:
        condition: service_healthy

  zabbix-agent:
    image: ${ZABBIX_AGENT_IMAGE_TAG}
    environment:
      ZBX_HOSTNAME: Zabbix server
      ZBX_SERVER_HOST: 10.0.0.105
    networks:
      - zabbix-network
    restart: unless-stopped
    depends_on:
      - postgres
      - zabbix-server

  backups:
    image: ${ZABBIX_POSTGRES_IMAGE_TAG}
    command: >-
      sh -c 'sleep $ZABBIX_BACKUP_INIT_SLEEP &&
      while true; do
        pg_dump -h postgres -p 5432 -d $ZABBIX_DB_NAME -U $ZABBIX_DB_USER | gzip > $ZABBIX_POSTGRES_BACKUPS_PATH/$ZABBIX_POSTGRES_BACKUP_NAME-$(date "+%Y-%m-%d_%H-%M").gz &&
        find $ZABBIX_POSTGRES_BACKUPS_PATH -type f -mtime +$ZABBIX_POSTGRES_BACKUP_PRUNE_DAYS | xargs rm -f &&
        sleep $ZABBIX_BACKUP_INTERVAL; done'
    volumes:
      - zabbix-postgres-backup:/var/lib/postgresql/data
      - zabbix-database-backups:${ZABBIX_POSTGRES_BACKUPS_PATH}
    environment:
      ZABBIX_DB_NAME: ${ZABBIX_DB_NAME}
      ZABBIX_DB_USER: ${ZABBIX_DB_USER}
      PGPASSWORD: ${ZABBIX_DB_PASSWORD}
      ZABBIX_BACKUP_INIT_SLEEP: ${ZABBIX_BACKUP_INIT_SLEEP}
      ZABBIX_BACKUP_INTERVAL: ${ZABBIX_BACKUP_INTERVAL}
      ZABBIX_POSTGRES_BACKUP_PRUNE_DAYS: ${ZABBIX_POSTGRES_BACKUP_PRUNE_DAYS}
      ZABBIX_POSTGRES_BACKUPS_PATH: ${ZABBIX_POSTGRES_BACKUPS_PATH}
      ZABBIX_POSTGRES_BACKUP_NAME: ${ZABBIX_POSTGRES_BACKUP_NAME}
    networks:
      - zabbix-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy